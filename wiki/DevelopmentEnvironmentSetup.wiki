This page details the steps required to compile AOSP in Debian / Ubuntu Linux.

= Introduction =

These instructions will allow you to configure your machine for development and compilation of the Android source code. Minimal exposure to Linux is required to complete the steps below successfully. 

= Details =

 1. Setting up AOSP (Debian Environment)

 1.1. Install the following packages (most are necessary utilities you will need throughout the course of the build): 

 a) Open a terminal and enter the following: 

<i>apt-get install git-core gnupg flex bison gperf libsdl-dev libesd0-dev libwxgtk2.6-dev build-essential zip curl libncurses5-dev zlib1g-dev patch gzip cpio mkcramfs lunch</i>


 1.2. Install Sun Java 5  (not available on current Linux distros...must add repos)

 a) Add the necessary repositories to your software sources:

		deb http://us.archive.ubuntu.com/ubuntu/ jaunty main restricted
		deb http://us.archive.ubuntu.com/ubuntu/ jaunty-updates main restricted
		deb http://us.archive.ubuntu.com/ubuntu/ jaunty multiverse
		deb http://us.archive.ubuntu.com/ubuntu/ jaunty-updates multiverse

 b) Install the JDK:

		apt-get install sun-java5-jdk

 c) Configure the JVM / JDK:

		update-alternatives --config java

		Select Java 5 from the list of options for JVM. 


 1.3. Install Valgrind (Find memory leaks, stack corruption, array bounds overflows)

		apt-get install valgrind


 1.4. Install GCC and G++ 4.3 (Not Latest Version)

 a) Install earlier version by opening terminal and:

		sudo apt-get install gcc-4.1 gcc-4.3 g++-4.3	

 b) Install alternatives by opening terminal and:

		sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.3 20
		sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.3 20

		 sudo update-alternatives --install /usr/bin/cc cc /usr/bin/gcc 30
		 sudo update-alternatives --set cc /usr/bin/gcc